rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
    
      function isUserAuthenticated(uid) {
        return request.auth.uid == uid;
      }
    
      match /social/{version} {
      
        match /users/{uid} {
          allow read: if true;
          allow update: if isUserAuthenticated(uid);

          match /participatingChatRooms/{chat_id} {
            allow read, update: if isUserAuthenticated(uid);
            
            match /unreadMessageCounts/{shard_id} {
              allow read, write: if isUserAuthenticated(uid);
            }
          }

          match /contacts/{user_id} {
            allow read, write: if isUserAuthenticated(uid);
          }
        }

        function isChatMember(room_id) {
          return request.auth.uid in get(/databases/$(database)/documents/social/$(version)/chatRooms/$(room_id)).data.userIds
        }

        match /chatRooms/{room_id} {
          allow read: if request.auth != null;
          allow create: if request.auth != null;
          allow update, delete: if isChatMember(room_id);

          match /messages/{message_id} {
            allow read, write: if isChatMember(room_id);
          }
        }
      }
    }
  }
}
